/*
 * generated by Xtext
 */
package com.github.thomasfischl.rayden.ui.contentassist;

import java.util.List;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext;
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor;

import com.github.thomasfischl.rayden.raydenDSL.KeywordDecl;
import com.github.thomasfischl.rayden.raydenDSL.LocatorDecl;
import com.github.thomasfischl.rayden.raydenDSL.ObjectRepositryControlDecl;
import com.github.thomasfischl.rayden.util.RaydenModelUtils;

/**
 * see http://www.eclipse.org/Xtext/documentation.html#contentAssist on how to customize content assistant
 */
public class RaydenDSLProposalProvider extends com.github.thomasfischl.rayden.ui.contentassist.AbstractRaydenDSLProposalProvider {

  @Override
  public void completeKeywordCall_Name(EObject model, Assignment assignment, ContentAssistContext context,
      ICompletionProposalAcceptor acceptor) {
    super.completeKeywordCall_Name(model, assignment, context, acceptor);

    List<KeywordDecl> keywords = RaydenModelUtils.getAllKeywords(model);
    KeywordDecl parentKeyword = RaydenModelUtils.getKeywordDecl(model);

    for (KeywordDecl keyword : keywords) {
      // ignore the current keyword from the list to avoid loops
      if (parentKeyword == keyword) {
        continue;
      }
      acceptor.accept(createCompletionProposal(RaydenModelUtils.normalizeKeyword(keyword.getName()), context));
    }
  }

  @Override
  public void complete_LocatorPartDecl(EObject model, RuleCall ruleCall, ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
    super.complete_LocatorPartDecl(model, ruleCall, context, acceptor);

    if (model instanceof LocatorDecl) {
      LocatorDecl locator = (LocatorDecl) model;

      ObjectRepositryControlDecl control = RaydenModelUtils.getControl(locator, RaydenModelUtils.getRoot(locator));
      if (control != null) {
        System.out.println(control);

        for (ObjectRepositryControlDecl ctrl : control.getControls()) {
          generateProposals(context, acceptor, ctrl, "");
        }
      } else {
        List<ObjectRepositryControlDecl> applications = RaydenModelUtils.getAllApplications(RaydenModelUtils.getRoot(locator));
        for (ObjectRepositryControlDecl applicatoin : applications) {
          generateProposals(context, acceptor, applicatoin, "");
        }
      }
    }
  }

  private void generateProposals(ContentAssistContext context, ICompletionProposalAcceptor acceptor, ObjectRepositryControlDecl ctrl,
      String base) {

    String locator = base + ctrl.getName().trim();
    acceptor.accept(createCompletionProposal(locator, context));

    for (ObjectRepositryControlDecl child : ctrl.getControls()) {
      generateProposals(context, acceptor, child, locator + ".");
    }
  }

}
